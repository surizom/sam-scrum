{"version":3,"sources":["state/constants.ts","state/boardDataReducers.ts","state/projectContext.tsx","components/AutoSizeTextArea.tsx","components/Item.tsx","components/AddItem.tsx","components/ListTitle.tsx","components/List.tsx","components/ProductBacklog.tsx","components/AddList.tsx","components/Sprint.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProjectAction","moveItemWithinSameList","sourceIndex","destinationIndex","item","position","Math","min","max","findSprintIdByColumnId","projectData","columnId","Object","keys","backlog","includes","type","items","sprintId","sprints","prototype","hasOwnProperty","call","sprint","data","INITIAL_PROJECT_DATA","project_title","list_title","item_content","startDate","Date","endDate","goal","INITIAL_CONTEXT_VALUE","dispatch","ProjectContext","createContext","ProjectProvider","children","useReducer","state","action","REORDER_ITEM_POSITION","source","destination","itemId","droppableId","Error","newItems","fromEntries","entries","map","key","value","index","newProjectData","cloneDeep","sourceSprint","sourceItems","destinationSprint","destinationItems","movingItem","reorderItemPosition","ADD_ITEM","listId","content","listItems","undefined","length","newId","uuid","addItem","UPDATE_ITEM","newItemData","updateItem","ADD_LIST","listTitle","list","newBoardData","addList","DELETE_LIST","omit","deleteList","DELETE_ITEM","deleteItem","UPDATE_LIST_TITLE","updateListTitle","Provider","TextArea","styled","textarea","props","editMode","isTitle","AutoSizeTextArea","placeholder","onSave","updateValue","onBlur","useState","textAreaValue","setTextAreaValue","textAreaRef","useRef","useEffect","current","style","height","scrollHeight","focus","select","ref","onChange","e","target","rows","onKeyDown","keyCode","preventDefault","blur","spellCheck","Delete","div","TextAreaWrapper","ItemDraggable","Item","itemData","setEditMode","useContext","contentClick","deleteClick","draggableId","disableInteractiveElementBlocking","draggableProvided","innerRef","draggableProps","dragHandleProps","onClick","Button","Wrapper","AddItem","compose","setCompose","className","Container","ListTitle","setDragBlocking","title","setUpdateValue","_title","trim","setTimeout","ListWrapper","ListDroppable","List","listData","itemIds","sort","a","b","dragBlocking","provided","droppableProvided","id","ProductBacklogWrapper","ProductBackLog","Input","input","AddList","setListTitle","refInput","SprintWrapper","SprintHeader","SprintHeaderSide","SprintTitle","SprintSubtitle","ListsWrapper","DeleteSprintButton","button","CloseSprintButton","Sprint","listIds","ProjectContainer","ProjectHeader","ProjectTitle","ProjectContent","AddSprintButton","AddSprintPlusIcon","onDragEnd","result","Project","sprintIds","backlogIds","onBeforeDragStart","document","activeElement","tagName","toUpperCase","HTMLElement","direction","droppableProps","backlogId","Heading","Title","LogoSquare","LogoRectangle1","LogoRectangle2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2a50a90.chunk.js","sourcesContent":["import { ProjectData } from \"../types/types\";\n\nexport const INITIAL_PROJECT_DATA: ProjectData = {\n  project_title: \"Main Project\",\n  sprints: {\n    \"7cd31ac2-acfc-4912-a6ad-98ecdef9fff5\": {\n      data: {\n        \"5cac8c9e-f91b-438a-9e18-00cea4667ee3\": {\n          position: 0,\n          list_title: \"Sprint Backlog\",\n          items: {\n            \"52f8d85a-0196-46f0-96f3-5878846851dd\": {\n              position: 0,\n              item_content: \"todo item 1\",\n            },\n            \"271beef3-8082-4ec2-aa9b-955944aea405\": {\n              position: 1,\n              item_content: \"second todo item\",\n            },\n          },\n        },\n        \"860c2140-f2cd-4e9a-8b82-179137e19b1e\": {\n          position: 1,\n          list_title: \"Doing\",\n          items: {\n            \"63bdd1d2-aa55-4e69-8f98-b345b5b6bdfd\": {\n              position: 0,\n              item_content: \"some data here\",\n            },\n            \"8c2b284c-babe-48ce-8eed-12d3fed2334a\": {\n              position: 2,\n              item_content: \"here is more text\",\n            },\n            \"11c54528-b4d5-4142-8069-3f82b91a7a2e\": {\n              position: 1,\n              item_content: \"Multi-line item example. Multi-line item example. \",\n            },\n          },\n        },\n        \"860c2140-f2cd-4e9a-8b82-179477e19b1e\": {\n          position: 2,\n          list_title: \"Done\",\n          items: {\n            \"63bdd1d2-aa55-4e69-0f98-b345b5b6bdfd\": {\n              position: 0,\n              item_content: \"some data here\",\n            },\n            \"562b284c-babe-48ce-8e4d-12d3fed2334a\": {\n              position: 2,\n              item_content: \"here is more text\",\n            },\n            \"22c54528-b4d5-4142-8069-3f82b91a7a2e\": {\n              position: 1,\n              item_content: \"Multi-line item example. Multi-line item example. \",\n            },\n          },\n        },\n      },\n      startDate: new Date(),\n      endDate: new Date(),\n      position: 0,\n      goal: \"My first sprint !\",\n    },\n  },\n  backlog: {\n    \"77c73546-1d0a-4144-a2bb-2247e07a6deb\": {\n      list_title: \"Product Backlog\",\n      position: 0,\n      items: {\n        \"55d8a49b-6a2a-4d8d-9f9d-369f975ea4d2\": {\n          position: 0,\n          item_content: \"backlog 1\",\n        },\n        \"f73d0a10-f5ad-4dcf-b6aa-facc0de6f26d\": {\n          position: 1,\n          item_content: \"backlog 2\",\n        },\n      },\n    },\n  },\n};\n\nexport enum ProjectAction {\n  REORDER_ITEM_POSITION = \"reorderItemPosition\",\n  ADD_ITEM = \"addItem\",\n  UPDATE_ITEM = \"updateItem\",\n  DELETE_ITEM = \"deleteItem\",\n  ADD_LIST = \"addList\",\n  DELETE_LIST = \"deleteList\",\n  UPDATE_LIST_TITLE = \"updateListTitle\",\n}\n","/* eslint-disable no-restricted-syntax */\nimport { DraggableLocation } from \"react-beautiful-dnd\";\nimport uuid from \"uuidv4\";\nimport { omit, cloneDeep } from \"lodash\";\n\nimport { ProjectData, Item, Items, Column } from \"../types/types\";\n\nconst moveItemWithinSameList = ({\n  sourceIndex,\n  destinationIndex,\n  item,\n}: {\n  sourceIndex: number;\n  destinationIndex: number;\n  item: Item;\n}): Item => {\n  if (item.position === sourceIndex) {\n    return {\n      ...item,\n      position: destinationIndex,\n    };\n  }\n  if (\n    item.position < Math.min(sourceIndex, destinationIndex) ||\n    item.position > Math.max(sourceIndex, destinationIndex)\n  ) {\n    return item;\n  }\n  if (sourceIndex < destinationIndex) {\n    return {\n      ...item,\n      position: item.position - 1,\n    };\n  }\n  return {\n    ...item,\n    position: item.position + 1,\n  };\n};\n\ntype FindSprintIdReturnType =\n  | {\n      type: \"SPRINT\";\n      sprintId: string;\n      items: Items;\n    }\n  | {\n      type: \"BACKLOG\";\n      items: Items;\n    }\n  | {\n      type: \"ERROR\";\n    };\n\nconst findSprintIdByColumnId = (\n  projectData: ProjectData,\n  columnId: string\n): FindSprintIdReturnType => {\n  if (Object.keys(projectData.backlog).includes(columnId)) {\n    return {\n      type: \"BACKLOG\",\n      items: projectData.backlog[columnId].items,\n    };\n  }\n  for (const sprintId in projectData.sprints) {\n    if (Object.prototype.hasOwnProperty.call(projectData.sprints, sprintId)) {\n      const sprint = projectData.sprints[sprintId];\n      if (Object.keys(sprint.data).includes(columnId)) {\n        return {\n          type: \"SPRINT\",\n          sprintId,\n          items: projectData.sprints[sprintId].data[columnId].items,\n        };\n      }\n    }\n  }\n\n  return {\n    type: \"ERROR\",\n  };\n};\n\nexport const reorderItemPosition = (\n  projectData: ProjectData,\n  source: DraggableLocation,\n  destination: DraggableLocation,\n  itemId: string\n): ProjectData => {\n  // moving item within same list\n  if (source.droppableId === destination.droppableId) {\n    const sprint = findSprintIdByColumnId(projectData, source.droppableId);\n    if (sprint.type === \"ERROR\") {\n      throw new Error(\"ColumnId not found in projectData\");\n    }\n    const { items } = sprint;\n\n    const newItems = Object.fromEntries(\n      Object.entries(items).map(([key, value]) => [\n        key,\n        moveItemWithinSameList({\n          item: value,\n          sourceIndex: source.index,\n          destinationIndex: destination.index,\n        }),\n      ])\n    );\n    const newProjectData = cloneDeep(projectData);\n    if (sprint.type === \"SPRINT\") {\n      newProjectData.sprints[sprint.sprintId].data[source.droppableId].items = newItems;\n    } else if (sprint.type === \"BACKLOG\") {\n      newProjectData.backlog[source.droppableId].items = newItems;\n    }\n\n    return newProjectData;\n  }\n  // moving item between different columns\n  const sourceSprint = findSprintIdByColumnId(projectData, source.droppableId);\n  if (sourceSprint.type === \"ERROR\") {\n    throw new Error(\"ColumnId not found in projectData\");\n  }\n  const sourceItems = Object.fromEntries(\n    Object.entries(sourceSprint.items).map(([key, value]) => [\n      key,\n      {\n        ...value,\n        position: value.position > source.index ? value.position - 1 : value.position,\n      },\n    ])\n  );\n\n  const destinationSprint = findSprintIdByColumnId(projectData, destination.droppableId);\n  if (destinationSprint.type === \"ERROR\") {\n    throw new Error(\"ColumnId not found in projectData\");\n  }\n  const destinationItems = Object.fromEntries(\n    Object.entries(destinationSprint.items).map(([key, value]) => [\n      key,\n      {\n        ...value,\n        position: value.position >= destination.index ? value.position + 1 : value.position,\n      },\n    ])\n  );\n\n  const movingItem: Item = {\n    ...sourceItems[itemId],\n    position: destination.index,\n  };\n\n  const newProjectData = cloneDeep(projectData);\n\n  if (sourceSprint.type === \"SPRINT\") {\n    if (destinationSprint.type === \"SPRINT\") {\n      newProjectData.sprints[sourceSprint.sprintId].data[source.droppableId].items = sourceItems;\n      newProjectData.sprints[destinationSprint.sprintId].data[\n        destination.droppableId\n      ].items = destinationItems;\n      newProjectData.sprints[destinationSprint.sprintId].data[destination.droppableId].items[\n        itemId\n      ] = movingItem;\n      delete newProjectData.sprints[sourceSprint.sprintId].data[source.droppableId].items[itemId];\n    } else {\n      newProjectData.sprints[sourceSprint.sprintId].data[source.droppableId].items = sourceItems;\n      newProjectData.backlog[destination.droppableId].items = destinationItems;\n      newProjectData.backlog[destination.droppableId].items[itemId] = movingItem;\n      delete newProjectData.sprints[sourceSprint.sprintId].data[source.droppableId].items[itemId];\n    }\n  } else if (sourceSprint.type === \"BACKLOG\") {\n    if (destinationSprint.type === \"SPRINT\") {\n      newProjectData.backlog[source.droppableId].items = sourceItems;\n      newProjectData.sprints[destinationSprint.sprintId].data[\n        destination.droppableId\n      ].items = destinationItems;\n      newProjectData.sprints[destinationSprint.sprintId].data[destination.droppableId].items[\n        itemId\n      ] = movingItem;\n      delete newProjectData.backlog[source.droppableId].items[itemId];\n    } else {\n      newProjectData.backlog[source.droppableId].items = sourceItems;\n      newProjectData.backlog[destination.droppableId].items = destinationItems;\n      newProjectData.backlog[destination.droppableId].items[itemId] = movingItem;\n      delete newProjectData.backlog[source.droppableId].items[itemId];\n    }\n  }\n\n  return newProjectData;\n};\n\nexport const addItem = ({\n  projectData,\n  sprintId,\n  listId,\n  content,\n}: {\n  projectData: ProjectData;\n  sprintId?: string;\n  listId: string;\n  content: string;\n}): ProjectData => {\n  const listItems: Items =\n    sprintId === undefined\n      ? projectData.backlog[listId].items\n      : projectData.sprints[sprintId].data[listId].items;\n  const position: number = Object.keys(listItems).length;\n  const item: Item = { position, item_content: content };\n  const newId = uuid();\n\n  const newProjectData = cloneDeep(projectData);\n  if (sprintId === undefined) {\n    newProjectData.backlog[listId].items[newId] = item;\n  } else {\n    newProjectData.sprints[sprintId].data[listId].items[newId] = item;\n  }\n  return newProjectData;\n};\n\nexport const updateItem = ({\n  projectData,\n  sprintId,\n  listId,\n  itemId,\n  content,\n}: {\n  projectData: ProjectData;\n  sprintId?: string;\n  listId: string;\n  itemId: string;\n  content: string;\n}): ProjectData => {\n  const newItemData = cloneDeep(projectData);\n  if (sprintId === undefined) {\n    newItemData.backlog[listId].items[itemId].item_content = content;\n    return newItemData;\n  }\n  newItemData.sprints[sprintId].data[listId].items[itemId].item_content = content;\n  return newItemData;\n};\n\nexport const addList = (\n  projectData: ProjectData,\n  sprintId: string,\n  listTitle: string\n): ProjectData => {\n  const position: number = Object.keys(projectData.sprints[sprintId].data).length;\n  const list: Column = { position, list_title: listTitle, items: {} };\n  const newId = uuid();\n\n  const newBoardData = cloneDeep(projectData);\n  newBoardData.sprints[sprintId].data[newId] = list;\n  return newBoardData;\n};\n\nexport const updateListTitle = (\n  projectData: ProjectData,\n  sprintId: string,\n  listId: string,\n  listTitle: string\n) => {\n  const newBoardData = cloneDeep(projectData);\n  newBoardData.sprints[sprintId].data[listId].list_title = listTitle;\n  return newBoardData;\n};\n\nexport const deleteList = (projectData: ProjectData, sprintId: string, listId: string) =>\n  omit(projectData, [`sprints.${sprintId}.data.${listId}`]) as ProjectData;\n\nexport const deleteItem = ({\n  projectData,\n  sprintId,\n  listId,\n  itemId,\n}: {\n  projectData: ProjectData;\n  sprintId?: string;\n  listId: string;\n  itemId: string;\n}) => {\n  // if product backlog\n  if (sprintId === undefined) {\n    return omit(projectData, [`backlog.${listId}.items.${itemId}`]) as ProjectData;\n  }\n  return omit(projectData, [`sprints.${sprintId}.data.${listId}.items.${itemId}`]) as ProjectData;\n};\n","import React, { createContext, ReactNode, useReducer } from \"react\";\nimport { DraggableLocation } from \"react-beautiful-dnd\";\nimport { ProjectData } from \"../types/types\";\nimport {\n  addItem,\n  addList,\n  deleteItem,\n  deleteList,\n  reorderItemPosition,\n  updateItem,\n  updateListTitle,\n} from \"./boardDataReducers\";\nimport { INITIAL_PROJECT_DATA, ProjectAction } from \"./constants\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\ninterface ProjectContextProps {\n  projectData: ProjectData;\n  dispatch: React.Dispatch<ProjectActionType>;\n}\n\nexport const INITIAL_CONTEXT_VALUE: ProjectContextProps = {\n  projectData: INITIAL_PROJECT_DATA,\n  dispatch: () => null,\n};\n\nexport const ProjectContext = createContext<ProjectContextProps>(INITIAL_CONTEXT_VALUE);\n\nexport type ProjectActionType =\n  | {\n      type: ProjectAction.REORDER_ITEM_POSITION;\n      source: DraggableLocation;\n      destination: DraggableLocation;\n      itemId: string;\n    }\n  | { type: ProjectAction.ADD_ITEM; sprintId?: string; listId: string; content: string }\n  | {\n      type: ProjectAction.UPDATE_ITEM;\n      sprintId?: string;\n      listId: string;\n      itemId: string;\n      content: string;\n    }\n  | { type: ProjectAction.ADD_LIST; sprintId: string; listTitle: string }\n  | { type: ProjectAction.DELETE_ITEM; sprintId?: string; listId: string; itemId: string }\n  | { type: ProjectAction.DELETE_LIST; sprintId: string; listId: string }\n  | { type: ProjectAction.UPDATE_LIST_TITLE; sprintId: string; listId: string; listTitle: string };\n\nexport const ProjectProvider: React.FC<Props> = ({ children }) => {\n  function reducer(state: ProjectData, action: ProjectActionType) {\n    switch (action.type) {\n      case ProjectAction.REORDER_ITEM_POSITION:\n        return reorderItemPosition(state, action.source, action.destination, action.itemId);\n      case ProjectAction.ADD_ITEM:\n        return addItem({\n          projectData: state,\n          sprintId: action.sprintId,\n          listId: action.listId,\n          content: action.content,\n        });\n      case ProjectAction.UPDATE_ITEM:\n        return updateItem({\n          projectData: state,\n          sprintId: action.sprintId,\n          listId: action.listId,\n          itemId: action.itemId,\n          content: action.content,\n        });\n      case ProjectAction.ADD_LIST:\n        return addList(state, action.sprintId, action.listTitle);\n      case ProjectAction.DELETE_LIST:\n        return deleteList(state, action.sprintId, action.listId);\n      case ProjectAction.DELETE_ITEM:\n        return deleteItem({\n          projectData: state,\n          sprintId: action.sprintId,\n          listId: action.listId,\n          itemId: action.itemId,\n        });\n      case ProjectAction.UPDATE_LIST_TITLE:\n        return updateListTitle(state, action.sprintId, action.listId, action.listTitle);\n      default:\n        return state;\n    }\n  }\n\n  const [projectData, dispatch] = useReducer(reducer, INITIAL_CONTEXT_VALUE.projectData);\n\n  return (\n    <ProjectContext.Provider value={{ projectData, dispatch }}>{children}</ProjectContext.Provider>\n  );\n};\n","import React, { useState, useEffect, useRef, ChangeEvent, KeyboardEvent } from \"react\";\nimport styled from \"styled-components\";\n\ninterface TextAreaProps {\n  readonly editMode: boolean;\n  readonly isTitle: boolean;\n}\nconst TextArea = styled.textarea<TextAreaProps>`\n  cursor: ${(props) => (props.editMode ? \"text\" : \"pointer\")};\n  height: auto;\n  width: 100%;\n  overflow-y: hidden;\n  border: none;\n  resize: none;\n  border-radius: 4px;\n  width: 100%;\n  padding: 0;\n  font-weight: ${(props) => (props.isTitle ? \"600\" : \"400\")};\n  text-align: ${(props) => (props.isTitle ? \"center\" : \"start\")};\n  font-size: ${(props) => (props.isTitle ? \"22px\" : \"unset\")};\n  color: ${(props) => (props.isTitle ? \"#40506C\" : \"unset\")};\n  background: transparent;\n`;\n\ntype AutoSizeTextAreaProps = {\n  placeholder: string;\n  editMode: boolean;\n  onSave: (value: string) => void;\n  updateValue: string;\n  onBlur: (text: string) => void;\n  isTitle: boolean;\n};\nconst AutoSizeTextArea = ({\n  placeholder,\n  editMode,\n  onSave,\n  updateValue,\n  onBlur,\n  isTitle,\n}: AutoSizeTextAreaProps) => {\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  const resizeTextArea = () => {\n    if (textAreaRef.current) {\n      textAreaRef.current.style.height = \"auto\";\n      textAreaRef.current.style.height = `${textAreaRef.current.scrollHeight}px`;\n    }\n  };\n  useEffect(() => {\n    setTextAreaValue(updateValue);\n  }, [updateValue]);\n  useEffect(() => {\n    resizeTextArea();\n  }, [textAreaValue]);\n\n  useEffect(() => {\n    if (editMode && textAreaRef.current) {\n      textAreaRef.current.focus();\n      textAreaRef.current.select();\n    }\n  }, [editMode]);\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setTextAreaValue(e.target.value);\n  };\n\n  const onKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n    // enter pressed\n    if (e.keyCode === 13 && textAreaRef.current) {\n      e.preventDefault();\n      onSave(textAreaValue);\n      textAreaRef.current.blur();\n    }\n  };\n  return (\n    <TextArea\n      isTitle={isTitle}\n      ref={textAreaRef}\n      value={textAreaValue}\n      onChange={onChange}\n      rows={1}\n      onKeyDown={onKeyDown}\n      onBlur={() => onBlur(textAreaValue)}\n      spellCheck=\"false\"\n      editMode={editMode}\n      placeholder={placeholder}\n    />\n  );\n};\nexport default AutoSizeTextArea;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Item as ItemType } from \"../types/types\";\nimport AutoSizeTextArea from \"./AutoSizeTextArea\";\nimport { ProjectContext } from \"../state/projectContext\";\nimport { ProjectAction } from \"../state/constants\";\n\nconst Delete = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  font-size: 16px;\n  line-height: 23px;\n  font-family: trellicons;\n  border-radius: 3px;\n  height: 23px;\n  width: 23px;\n  text-align: center;\n  &:hover {\n    background-color: rgba(9, 30, 66, 0.08);\n  }\n  visibility: hidden;\n  cursor: pointer;\n`;\n\nconst TextAreaWrapper = styled.div`\n  width: 100%;\n`;\n\ninterface ItemDraggableProps {\n  readonly editMode: boolean;\n}\n\nconst ItemDraggable = styled.div<ItemDraggableProps>`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding-top: 12px;\n  padding-bottom: 8px;\n  padding-left: 14px;\n  padding-right: 14px;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: ${(props) => (props.editMode ? \"none\" : \"0px 2px 0px rgba(0, 0, 0, 0.2)\")};\n  margin-bottom: 8px;\n  &:hover ${Delete} {\n    visibility: visible;\n  }\n`;\n\ntype ItemProps = {\n  sprintId?: string;\n  listId: string;\n  itemId: string;\n  itemData: ItemType;\n};\nconst Item = ({ listId, itemId, itemData, sprintId }: ItemProps) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  const { dispatch } = useContext(ProjectContext);\n\n  const onSave = (content: string) => {\n    dispatch({ type: ProjectAction.UPDATE_ITEM, sprintId, listId, itemId, content });\n    setEditMode(false);\n  };\n\n  const contentClick = () => {\n    setEditMode(true);\n  };\n\n  const deleteClick = () => {\n    dispatch({ type: ProjectAction.DELETE_ITEM, sprintId, listId, itemId });\n  };\n\n  return (\n    <Draggable\n      draggableId={itemId}\n      index={itemData.position}\n      disableInteractiveElementBlocking={!editMode}\n    >\n      {(draggableProvided) => (\n        <ItemDraggable\n          ref={draggableProvided.innerRef}\n          {...draggableProvided.draggableProps}\n          {...draggableProvided.dragHandleProps}\n          editMode={editMode}\n        >\n          <TextAreaWrapper onClick={contentClick}>\n            <AutoSizeTextArea\n              isTitle={false}\n              placeholder=\"\"\n              onSave={onSave}\n              updateValue={itemData.item_content}\n              // should i cancel???\n              onBlur={onSave}\n              editMode={editMode}\n            />\n          </TextAreaWrapper>\n\n          <Delete onClick={deleteClick}>&#xE918;</Delete>\n        </ItemDraggable>\n      )}\n    </Draggable>\n  );\n};\nexport default Item;\n","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ProjectAction } from \"../state/constants\";\nimport { ProjectContext } from \"../state/projectContext\";\nimport AutoSizeTextArea from \"./AutoSizeTextArea\";\n\nconst Button = styled.div`\n  cursor: pointer;\n  padding: 8px;\n  &:hover span:last-child {\n    text-decoration: underline;\n  }\n  &:hover {\n    background-color: rgba(9, 30, 66, 0.08);\n  }\n`;\n\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\n\ntype AddItemProps = {\n  sprintId?: string;\n  listId: string;\n};\n\nconst AddItem = ({ listId, sprintId }: AddItemProps) => {\n  const [compose, setCompose] = useState<boolean>(false);\n\n  const { dispatch } = useContext(ProjectContext);\n\n  if (!compose) {\n    return (\n      <Button onClick={() => setCompose(true)}>\n        <span className=\"trellicons\">&#xE901;</span> <span>Add another item</span>\n      </Button>\n    );\n  }\n\n  const onSave = (content: string) => {\n    dispatch({ type: ProjectAction.ADD_ITEM, sprintId, listId, content });\n    setCompose(false);\n  };\n\n  const cancel = () => {\n    setCompose(false);\n  };\n\n  return (\n    <Wrapper>\n      <AutoSizeTextArea\n        isTitle={false}\n        onSave={onSave}\n        updateValue=\"\"\n        onBlur={cancel}\n        editMode\n        placeholder=\"Enter a title for this item…\"\n      />\n    </Wrapper>\n  );\n};\nexport default AddItem;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { HTMLAttributes, useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport AutoSizeTextArea from \"./AutoSizeTextArea\";\nimport { ProjectAction } from \"../state/constants\";\nimport { ProjectContext } from \"../state/projectContext\";\n\nconst Delete = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  font-family: trellicons;\n  font-size: 16px;\n  line-height: 32px;\n  border-radius: 3px;\n  height: 32px;\n  width: 32px;\n  text-align: center;\n  &:hover {\n    background-color: rgba(9, 30, 66, 0.08);\n  }\n  visibility: hidden;\n`;\n\nconst Container = styled.div`\n  && {\n    cursor: pointer;\n  }\n  &:hover ${Delete} {\n    visibility: visible;\n  }\n`;\n\nconst TextAreaWrapper = styled.div`\n  padding: 4px 8px;\n`;\n\ntype ListTileProps = {\n  setDragBlocking: (dragBlocking: boolean) => void;\n  dragHandleProps: HTMLAttributes<HTMLDivElement> | undefined;\n  sprintId?: string;\n  listId: string;\n  title: string;\n};\n\nconst ListTitle = ({\n  setDragBlocking,\n  dragHandleProps,\n  sprintId,\n  listId,\n  title,\n}: ListTileProps) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [updateValue, setUpdateValue] = useState<string>(title);\n\n  const { dispatch } = useContext(ProjectContext);\n\n  const onSave =\n    sprintId === undefined\n      ? () => {}\n      : (_title: string) => {\n          if (_title.trim() === \"\") {\n            // this is hack, prevent user accidently deleting title\n            setUpdateValue(\"\");\n            setTimeout(() => setUpdateValue(title), 0);\n          } else {\n            dispatch({\n              type: ProjectAction.UPDATE_LIST_TITLE,\n              sprintId,\n              listId,\n              listTitle: _title,\n            });\n          }\n\n          setDragBlocking(false);\n          setEditMode(false);\n        };\n\n  const titleClick = () => {\n    setDragBlocking(true);\n    setEditMode(true);\n  };\n\n  const deleteClick =\n    sprintId === undefined\n      ? () => {}\n      : () => {\n          dispatch({ type: ProjectAction.DELETE_LIST, sprintId, listId });\n        };\n\n  return (\n    <Container {...dragHandleProps}>\n      <TextAreaWrapper onClick={titleClick}>\n        <AutoSizeTextArea\n          isTitle\n          placeholder=\"\"\n          onSave={onSave}\n          updateValue={updateValue}\n          onBlur={onSave}\n          editMode={!!sprintId && editMode}\n        />\n      </TextAreaWrapper>\n      <Delete onClick={deleteClick}>&#xE918;</Delete>\n    </Container>\n  );\n};\nexport default ListTitle;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport Item from \"./Item\";\nimport AddItem from \"./AddItem\";\nimport ListTitle from \"./ListTitle\";\nimport { Column, Items } from \"../types/types\";\n\nconst ListWrapper = styled.div`\n  position: relative;\n  width: 270px;\n  margin: 0 8px;\n  background-color: #e3e4e6;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding-top: 8px;\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 2px;\n`;\n\nconst ListDroppable = styled.div`\n  min-height: 50px;\n`;\n\nconst sortFn = (data: Items) => (a: string, b: string) => data[a].position - data[b].position;\n\ntype ListProps = {\n  listId: string;\n  listData: Column;\n  sprintId?: string;\n};\n\nconst List = ({ listId, listData, sprintId }: ListProps) => {\n  const itemIds: string[] = Object.keys(listData.items).sort(sortFn(listData.items));\n\n  const [dragBlocking, setDragBlocking] = useState<boolean>(false);\n\n  return (\n    <Draggable\n      disableInteractiveElementBlocking={!dragBlocking}\n      draggableId={listId}\n      index={listData.position}\n    >\n      {(provided) => (\n        <ListWrapper ref={provided.innerRef} {...provided.draggableProps}>\n          <ListTitle\n            sprintId={sprintId}\n            dragHandleProps={provided.dragHandleProps}\n            listId={listId}\n            title={listData.list_title}\n            setDragBlocking={setDragBlocking}\n          />\n\n          <Droppable droppableId={listId}>\n            {(droppableProvided) => (\n              <ListDroppable ref={droppableProvided.innerRef}>\n                {itemIds.map((id) => (\n                  <Item\n                    key={id}\n                    sprintId={sprintId}\n                    itemId={id}\n                    listId={listId}\n                    itemData={listData.items[id]}\n                  />\n                ))}\n                {droppableProvided.placeholder}\n              </ListDroppable>\n            )}\n          </Droppable>\n          {!sprintId ? <AddItem sprintId={sprintId} listId={listId} /> : null}\n        </ListWrapper>\n      )}\n    </Draggable>\n  );\n};\nexport default List;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Column } from \"../types/types\";\nimport List from \"./List\";\n\nconst ProductBacklogWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 8px;\n`;\n\ntype ProductBackLogProps = {\n  listId: string;\n  listData: Column;\n};\n\nconst ProductBackLog = ({ listId, listData }: ProductBackLogProps) => (\n  <ProductBacklogWrapper>\n    <List listId={listId} listData={listData} />\n  </ProductBacklogWrapper>\n);\nexport default ProductBackLog;\n","import React, { useState, useRef, useEffect, ChangeEvent, KeyboardEvent, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ProjectAction } from \"../state/constants\";\nimport { ProjectContext } from \"../state/projectContext\";\n\nconst Container = styled.div`\n  width: 272px;\n  flex: 0 0 272px;\n  /* instead of margin right for overflow-x scroll */\n  border-right: 8px solid transparent;\n  margin-left: 4px;\n`;\ninterface WrapperProps {\n  readonly compose: boolean;\n}\nconst Wrapper = styled.div<WrapperProps>`\n  border-radius: 3px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  background: #4e97c2;\n  color: #fff;\n`;\n\nconst Button = styled.div`\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  border-radius: 3px;\n  margin: -4px 0;\n  padding: 4px 8px;\n  border: none;\n  &:focus {\n    box-shadow: inset 0 0 0 2px #0079bf;\n    outline: 0;\n  }\n`;\n\ntype AddListProps = {\n  sprintId: string;\n};\nconst AddList = ({ sprintId }: AddListProps) => {\n  const [compose, setCompose] = useState<boolean>(false);\n  const [listTitle, setListTitle] = useState<string>(\"\");\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setListTitle(e.target.value);\n  };\n  const refInput = useRef<HTMLInputElement>(null);\n\n  const projectContext = useContext(ProjectContext);\n  const { dispatch } = projectContext;\n\n  useEffect(() => {\n    if (compose && refInput.current) {\n      refInput.current.focus();\n    }\n  }, [compose]);\n\n  const onKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) {\n      // e.preventDefault();\n      dispatch({ type: ProjectAction.ADD_LIST, sprintId, listTitle });\n      setListTitle(\"\");\n      setCompose(false);\n    }\n  };\n\n  const onBlur = () => {\n    if (listTitle.length > 0) {\n      dispatch({ type: ProjectAction.ADD_LIST, sprintId, listTitle });\n      setListTitle(\"\");\n    }\n    setCompose(false);\n  };\n\n  return (\n    <Container>\n      <Wrapper compose={compose}>\n        {compose || (\n          <Button onClick={() => setCompose(true)}>\n            <span className=\"trellicons\">&#xE901;</span> <span>Add another list</span>\n          </Button>\n        )}\n        {compose && (\n          <Input\n            ref={refInput}\n            type=\"text\"\n            value={listTitle}\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            onBlur={onBlur}\n            placeholder=\"Enter list title...\"\n          />\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\nexport default AddList;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ProjectContext } from \"../state/projectContext\";\nimport { Columns } from \"../types/types\";\nimport AddList from \"./AddList\";\nimport List from \"./List\";\n\nconst SprintWrapper = styled.div`\n  background-color: rgba(255, 255, 255, 0.87);\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  margin: 8px;\n`;\n\nconst SprintHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n  justify-content: space-between;\n`;\n\nconst SprintHeaderSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SprintTitle = styled.div`\n  font-size: 36px;\n  font-weight: 600;\n  margin-right: 32px;\n`;\n\nconst SprintSubtitle = styled.div`\n  padding-left: 16px;\n  padding-bottom: 16px;\n`;\n\nconst ListsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n`;\n\nconst DeleteSprintButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px;\n  background-color: #c24e4e;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  outline: 0;\n  margin-right: 16px;\n`;\n\nconst CloseSprintButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px;\n  background-color: #4e97c2;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  outline: 0;\n`;\n\ntype SprintProps = {\n  sprintId: string;\n};\nconst Sprint = ({ sprintId }: SprintProps) => {\n  const { projectData } = useContext(ProjectContext);\n  const sprint = projectData.sprints[sprintId];\n\n  const sortFn = (data: Columns) => (a: string, b: string) => data[a].position - data[b].position;\n\n  const listIds: string[] = Object.keys(projectData.sprints[sprintId].data).sort(\n    sortFn(projectData.sprints[sprintId].data)\n  );\n  return (\n    <SprintWrapper>\n      <SprintHeader>\n        <SprintHeaderSide>\n          <SprintTitle>Sprint {sprint.position + 1}</SprintTitle>\n          <span>durée - date-debut - date fin</span>\n        </SprintHeaderSide>\n        <SprintHeaderSide>\n          <DeleteSprintButton>Delete Sprint</DeleteSprintButton>\n          <CloseSprintButton>Close Sprint</CloseSprintButton>\n        </SprintHeaderSide>\n      </SprintHeader>\n      <SprintSubtitle>{sprint.goal}</SprintSubtitle>\n      <ListsWrapper>\n        {listIds.map((listId) => (\n          <List\n            key={listId}\n            sprintId={sprintId}\n            listId={listId}\n            listData={projectData.sprints[sprintId].data[listId]}\n          />\n        ))}\n        <AddList sprintId={sprintId} />\n      </ListsWrapper>\n    </SprintWrapper>\n  );\n};\nexport default Sprint;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Dispatch, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { ProjectActionType, ProjectContext } from \"../state/projectContext\";\nimport { ProjectAction } from \"../state/constants\";\nimport ProductBackLog from \"./ProductBacklog\";\nimport Sprint from \"./Sprint\";\nimport { Sprints } from \"../types/types\";\n\nconst ProjectContainer = styled.div`\n  flex: 1;\n  overflow-x: auto;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ProjectHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  padding: 8px;\n`;\n\nconst ProjectTitle = styled.div`\n  font-weight: 700;\n  font-size: 30px;\n  color: white;\n  margin-right: 16px;\n`;\n\nconst ProjectContent = styled.div`\n  flex: 1;\n  overflow-x: auto;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n`;\n\nconst AddSprintButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n  background-color: #4e97c2;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  outline: 0;\n`;\n\nconst AddSprintPlusIcon = styled.div`\n  color: white;\n  font-size: 22px;\n  margin-right: 12px;\n`;\n\nconst onDragEnd = (dispatch: Dispatch<ProjectActionType>) => (result: DropResult): void => {\n  // dropped nowhere\n  if (!result.destination) {\n    return;\n  }\n  const { source } = result;\n  const { destination } = result;\n  // did not move anywhere - can bail early\n  if (source.droppableId === destination.droppableId && source.index === destination.index) {\n    return;\n  }\n\n  if (result.type === \"COLUMN\") {\n    // For now, we can't move columns\n    // dispatch({\n    //   type: ProjectAction.REORDER_LIST_POSITION,\n    //   initialPosition: source.index,\n    //   finalPosition: destination.index,\n    // });\n    return;\n  }\n\n  dispatch({\n    type: ProjectAction.REORDER_ITEM_POSITION,\n    source,\n    destination,\n    itemId: result.draggableId,\n  });\n};\n\nconst Project = () => {\n  const { projectData, dispatch } = useContext(ProjectContext);\n\n  if (!projectData) {\n    return <div>loading</div>;\n  }\n\n  const onBeforeDragStart = () => {\n    if (\n      document.activeElement?.tagName.toUpperCase() === \"TEXTAREA\" &&\n      document.activeElement instanceof HTMLElement\n    ) {\n      document.activeElement.blur();\n    }\n  };\n\n  const sortFn = (data: Sprints) => (a: string, b: string) => data[a].position - data[b].position;\n\n  const sprintIds: string[] = Object.keys(projectData.sprints).sort(sortFn(projectData.sprints));\n  const backlogIds: string[] = Object.keys(projectData.backlog);\n\n  return (\n    <DragDropContext onBeforeDragStart={onBeforeDragStart} onDragEnd={onDragEnd(dispatch)}>\n      <Droppable droppableId=\"board\" type=\"COLUMN\" direction=\"horizontal\">\n        {(provided) => (\n          <ProjectContainer ref={provided.innerRef} {...provided.droppableProps}>\n            <ProjectHeader>\n              <ProjectTitle>{projectData.project_title}</ProjectTitle>\n              <AddSprintButton>\n                <AddSprintPlusIcon>+</AddSprintPlusIcon>\n                Add Sprint\n              </AddSprintButton>\n            </ProjectHeader>\n            <ProjectContent>\n              {backlogIds.map((backlogId) => (\n                <ProductBackLog\n                  key={backlogId}\n                  listId={backlogId}\n                  listData={projectData.backlog[backlogId]}\n                />\n              ))}\n\n              {sprintIds.map((sprintId) => (\n                <Sprint key={sprintId} sprintId={sprintId} />\n              ))}\n              {provided.placeholder}\n            </ProjectContent>\n          </ProjectContainer>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\nexport default Project;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Project from \"./components/Project\";\nimport { ProjectProvider } from \"./state/projectContext\";\n\nconst Heading = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: #026aa7;\n`;\n\nconst Title = styled.div`\n  color: #80b4d3;\n  font-size: 38px;\n  font-style: italic;\n  font-weight: 500;\n  margin-left: 8px;\n`;\n\nconst LogoSquare = styled.div`\n  position: relative;\n  width: 32px;\n  height: 32px;\n\n  background: #80b4d3;\n  border-radius: 5px;\n`;\n\nconst LogoRectangle1 = styled.div`\n  position: absolute;\n  width: 22px;\n  height: 8px;\n  left: 5px;\n  top: 11px;\n\n  background: #026aa7;\n  border-radius: 2px;\n`;\n\nconst LogoRectangle2 = styled.div`\n  position: absolute;\n  width: 22px;\n  height: 8px;\n  left: 5px;\n  top: 20px;\n\n  background: #026aa7;\n  border-radius: 2px;\n`;\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst App = () => (\n  <Container>\n    <ProjectProvider>\n      <Heading>\n        <LogoSquare>\n          <LogoRectangle1 />\n          <LogoRectangle2 />\n        </LogoSquare>\n        <Title>Sam</Title>\n      </Heading>\n      <Project />\n    </ProjectProvider>\n  </Container>\n);\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}